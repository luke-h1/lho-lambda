name: Build release version
on:
  workflow_dispatch:
  push:
    branches:
      - main
concurrency:
  group: build-release-version
  cancel-in-progress: false
permissions:
  issues: write
  contents: write
  pull-requests: write

env:
  PNPM_VERSION: 9.12.3
  # terraform variables; TODO: move to secretmanager
  TF_VAR_env: live
  TF_VAR_env_vars: ${{ secrets.LIVE_ENV_VARS }}
  TF_VAR_zone_id: ${{ secrets.LIVE_ZONE_ID }}
  TF_VAR_root_domain: lhowsam.com
  TF_VAR_sub_domain: nowplaying.lhowsam.com
  TF_VAR_private_key: ${{ secrets.LIVE_PRIVATE_KEY }}
  TF_VAR_certificate_body: ${{ secrets.LIVE_CERTIFICATE_BODY }}
  TF_VAR_certificate_chain: ${{ secrets.LIVE_CERTIFICATE_CHAIN }}
  TF_VAR_git_sha: ${{ github.sha }}
  TF_VAR_deployed_by: ${{ github.actor }}

  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
jobs:
  release:
    name: Release packages
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Install
        uses: ./.github/actions/install

      - name: Validate
        uses: ./.github/actions/validate

      - name: Changelogs
        uses: ./.github/actions/changelog
        with:
          prerelease: false
          publish: true

      - name: fetch latest commits
        run: git fetch && git pull

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          environment: live
          aws-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  success-message:
    runs-on: ubuntu-latest
    needs: release
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch latest commits
        run: git fetch -u origin main && git pull --rebase origin main

      - name: get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: apps/lambda

      - name: send telegram success message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            :white_check_mark: release of lho-lambda (${{ github.event.inputs.env }}) - ${{ steps.package-version.outputs.current-version }} succesful ✅ 
            
            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

  fail-message:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: apps/lambda

      - name: send telegram success message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |

            Build of release lho-lambda (${{ github.event.inputs.env }}) - ${{ github.head_ref }} failed ❌

            URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
