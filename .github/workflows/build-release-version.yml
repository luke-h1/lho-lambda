name: Build release version
on:
  workflow_dispatch:
  push:
    branches:
        - main
concurrency:
  group: build-release-version
  cancel-in-progress: false
permissions:
  issues: write  
env:
  PNPM_VERSION: 8.15.5
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Install moreutils
        run: sudo apt install moreutils

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i

      - name: Check commit message
        run: pnpm commitlint --from=HEAD^1

      - name: format:check
        run: pnpm format:check

      - name: lint
        run: pnpm lint

      - name: tsc
        run: pnpm tsc

  validate-infra:
    name: Validate infra
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    steps:
      - name: Install moreutils
        run: sudo apt install moreutils

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          mask-aws-account-id: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: terraform
        run: | 
          terraform init -backend-config="key=vpc/live.tfstate" -backend-config="bucket=nowplaying-live-terraform-state" -input=false

      - name: Terraform lint
        working-directory: terraform
        run: terraform fmt -check
     
      - name: Terraform plan
        working-directory: terraform
        run: terraform plan -out=tfplan -no-color
        
    #   - name: Comment Terraform Plan on PR
    #     uses: blinqas/tf-plan-pr-comment@v1
    #     with:
    #       output_file: 'tfplan'
    #       headline: "### Terraform Plan"
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: trstringer/manual-approval@v1
        timeout-minutes: 10
        with:
           secret: ${{ secrets.GITHUB_TOKEN }}
           issue-body: tfplan
           approvers: luke-h1
           minimum-approvals: 1
           issue-title: "Approve terraform for ${{ github.head_ref }}-${{ github.sha }} release"
           exclude-workflow-initiator-as-approver: false

  release:
    name: Release packages
    runs-on: ubuntu-latest
    needs: validate-infra
    timeout-minutes: 10
    steps:
      - name: Install moreutils
        run: sudo apt install moreutils

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          mask-aws-account-id: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Publish packages
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          pnpm lerna publish --yes --conventional-commits --create-release github --changelog-preset conventional-changelog-angular-all --force-publish --no-push
          git push -u origin/main --force --no-verify --follow-tags

      - name: Terraform init
        working-directory: terraform
        run: | 
          terraform init -backend-config="key=vpc/live.tfstate" -backend-config="bucket=nowplaying-live-terraform-state" -input=false

      - name: Terraform lint
        working-directory: terraform
        run: terraform fmt -check
     
      - name: Terraform plan
        working-directory: terraform
        run: terraform plan -out=tfplan -no-color

      - name: Terraform apply
        working-directory: terraform
        run: terraform apply -auto-approve tfplan
#   deploy:
#     name: Deploy
#     runs-on: ubuntu-latest
#     needs: build
#     timeout-minutes: 10
#     steps:
