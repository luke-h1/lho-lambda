name: Build pre-release version
on:
  workflow_dispatch:
  pull_request:
    types: [ opened, synchronize, edited, reopened ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  PNPM_VERSION: 9.4.0
  TF_VAR_env: staging
  TF_VAR_env_vars: ${{ secrets.LIVE_ENV_VARS }}
  TF_VAR_zone_id: ${{ secrets.LIVE_ZONE_ID }}
  TF_VAR_root_domain: lhowsam.com
  TF_VAR_sub_domain: nowplaying.lhowsam.com
  TF_VAR_private_key: ${{ secrets.STAGING_PRIVATE_KEY }}
  TF_VAR_certificate_body: ${{ secrets.STAGING_CERTIFICATE_BODY }}
  TF_VAR_certificate_chain: ${{ secrets.STAGING_CERTIFICATE_CHAIN }}
  TF_VAR_deployed_by: ${{ github.actor }}
  TF_VAR_git_sha: ${{ github.sha }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: luke-h1-projects
permissions: write-all

jobs:
  deploy:
    name: Deploy to staging
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Ensure rebased with main
        run: ./scripts/ensure-rebased.sh

      - name: Install
        uses: ./.github/actions/install

      - name: Validate
        uses: ./.github/actions/validate

      - name: Changelogs
        uses: ./.github/actions/changelog
        with:
          prerelease: true
          publish: false

      - name: fetch latest commits
        run: git fetch && git pull

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          environment: staging
          aws-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get version
        id: lambda-version
        run: |
          echo "::set-output name=LAMBDA_VERSION::$(node -e 'console.log(require("./apps/lambda/package.json").version)')"

      - uses: actions/github-script@v7
        with: 
          script: | 
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '* [Lambda version](https://nowplaying-${{env.TF_VAR_env}}.lhowsam.com) - `${{ steps.lambda-version.outputs.LAMBDA_VERSION }}`'
            })

  discord-message:
    runs-on: ubuntu-latest
    if: success()
    needs: deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch latest commits
        run: git fetch && git pull

      - name: get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: apps/lambda

      - name: Get version
        id: lambda-version
        run: |
          echo "::set-output name=LAMBDA_VERSION::$(node -e 'console.log(require("./apps/lambda/package.json").version)')"

      - name: Discord success notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: ':white_check_mark: staging release of lho-lambda `${{ steps.lambda-version.outputs.LAMBDA_VERSION }}` (${{ github.head_ref }}) successful :white_check_mark:'

  discord-fail-message:
    runs-on: ubuntu-latest
    if: failure()
    needs: deploy
    steps:
      - name: get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: apps/lambda

      - name: Get version
        id: lambda-version
        run: |
          echo "::set-output name=LAMBDA_VERSION::$(node -e 'console.log(require("./apps/lambda/package.json").version)')"

      - name: Discord fail notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: ':red_circle: staging release of lho-lambda `${{ steps.lambda-version.outputs.LAMBDA_VERSION }}` (${{ github.head_ref }}) failed :red_circle: URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
