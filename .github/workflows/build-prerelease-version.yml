name: Build pre-release version
on:
  workflow_dispatch:
  pull_request:
    types: [ opened, synchronize, edited, reopened ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  PNPM_VERSION: 9.12.3
  TF_VAR_env: staging
  TF_VAR_env_vars: ${{ secrets.LIVE_ENV_VARS }}
  TF_VAR_zone_id: ${{ secrets.LIVE_ZONE_ID }}
  TF_VAR_root_domain: lhowsam.com
  TF_VAR_sub_domain: nowplaying.lhowsam.com
  TF_VAR_private_key: ${{ secrets.STAGING_PRIVATE_KEY }}
  TF_VAR_certificate_body: ${{ secrets.STAGING_CERTIFICATE_BODY }}
  TF_VAR_certificate_chain: ${{ secrets.STAGING_CERTIFICATE_CHAIN }}
  TF_VAR_deployed_by: ${{ github.actor }}
  TF_VAR_git_sha: ${{ github.sha }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: luke-h1-projects
permissions: write-all

jobs:
  deploy:
    name: Deploy to staging
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Ensure rebased with main
        run: ./scripts/ensure-rebased.sh

      - name: Install
        uses: ./.github/actions/install

      - name: Validate
        uses: ./.github/actions/validate

      - name: Changelogs
        uses: ./.github/actions/changelog
        with:
          prerelease: true
          publish: false

      - name: fetch latest commits
        run: git fetch && git pull

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          environment: staging
          aws-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get version
        id: lambda-version
        run: |
          echo "::set-output name=LAMBDA_VERSION::$(node -e 'console.log(require("./apps/lambda/package.json").version)')"

      - uses: actions/github-script@v7
        with: 
          script: | 
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '* [Lambda version](https://nowplaying-${{env.TF_VAR_env}}.lhowsam.com) - `${{ steps.lambda-version.outputs.LAMBDA_VERSION }}`'
            })

  success-message:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch latest commits
        run: git fetch -u origin main && git pull --rebase origin main

      - name: get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: apps/lambda

      - name: Define message content
        id: define_message
        run: |
          echo "MESSAGE_CONTENT=:white_check_mark: release of lho-lambda (${{ github.event.inputs.env }}) - ${{ steps.package-version.outputs.current-version }} successful ✅\n\nRepository: ${{ github.repository }}\n\nSee changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}" >> $GITHUB_ENV

      - name: Send Telegram message
        run: |
          curl -X POST \
              -H 'Content-Type: application/json' \
              -d "{\"chat_id\": \"${{ secrets.TELEGRAM_TO }}\", \"text\": \"${{ env.MESSAGE_CONTENT }}\"}" \
              https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage
  fail-message:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: apps/lambda

      - name: send telegram success message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ env.TELEGRAM_TOKEN }}
          message: |

            Build of release lho-lambda (${{ github.event.inputs.env }}) - ${{ github.head_ref }} failed ❌

            URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
